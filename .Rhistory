<<<<<<< HEAD
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate by province"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
=======
label = paste0(round(pct,2), '%')),
hjust=1, # if flipping 'hjust'
size = 3,
#order(tableFreq$pct, decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
hjust=1, # if flipping 'hjust'
size = 3)
#order(tableFreq$pct, decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
hjust=1, # if flipping 'hjust'
size = 3)
#order(tableFreq$pct, decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages(haven)
library "haven"
library ("haven")
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
View(chw_fp)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages(haven)
install.packages(ggplot2)
library ("haven")
library("ggplot2")
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
# Chunk 1
library(readxl)
temp = tempfile(fileext = ".xlsx")
dataURL <- "https://github.com/ihsun-uw/Assignment-1/raw/master/consumptionnps4.xlsx" # link to data
download.file(dataURL, destfile=temp, mode='wb')  # file will be downloaded temporarily
cons = read_excel(temp, sheet =1)
cons=as.data.frame(cons)
temp = tempfile(fileext = ".xlsx")
dataURL <- "https://github.com/ihsun-uw/Assignment-1/raw/master/Education.xlsx" # link to data
download.file(dataURL, destfile=temp, mode='wb')  # file will be downloaded temporarily
educ = read_excel(temp, sheet =1)
educ=as.data.frame(educ)
temp = tempfile(fileext = ".xlsx")
dataURL <- "https://github.com/ihsun-uw/Assignment-1/raw/master/individual.xlsx" # link to data
download.file(dataURL, destfile=temp, mode='wb')  # file will be downloaded temporarily
indiv = read_excel(temp, sheet =1)
indiv=as.data.frame(indiv)
##subsetting
cons=cons[,c("y4_hhid", "expmR", "adulteq", "region")]
educ=educ[,c("y4_hhid", "indidy4", "hh_c02", "hh_c03", "hh_c07")]
indiv=indiv[,c("y4_hhid", "indidy4", "hh_b02")]
educ=educ[educ$indidy4==1,]
indiv=indiv[indiv$indidy4==1,]
merge1=merge(cons, educ)
alldata=merge(merge1, indiv)
alldata$cons=alldata$expmR/alldata$adulteq/365
alldata$gender.name[alldata$hh_b02==1] <- "male"
alldata$gender.name[alldata$hh_b02==2] <- "female"
alldata$gender[alldata$hh_b02==1] <- 0
alldata$gender[alldata$hh_b02==2] <- 1
alldata$gender=as.numeric(alldata$gender)
alldata$educ[alldata$hh_c03==2] <- 0
alldata$educ[alldata$hh_c07<17] <- 1
alldata$educ[alldata$hh_c07==17] <-2  #typical primary education is 7 years
alldata$educ[alldata$hh_c07==18] <-2
alldata$educ[alldata$hh_c07>=21 & alldata$hh_c07<25] <- 3
alldata$educ[alldata$hh_c07==24] <-4
alldata$educ[alldata$hh_c07>=31 & alldata$hh_c07<34] <- 5
alldata$educ[alldata$hh_c07==32] <-6
alldata$educ[alldata$hh_c07==34] <-6
alldata$educ[alldata$hh_c07>34] <- 7
alldata$educ1[alldata$educ=="0"] <- "no education"
alldata$educ1[alldata$educ=="1"] <- "some primary"
alldata$educ1[alldata$educ=="2"] <- "completed primary"
alldata$educ1[alldata$educ=="3"] <- "some secondary ordinary level"
alldata$educ1[alldata$educ=="4"] <- "completed secondary ordinary level"
alldata$educ1[alldata$educ=="5"] <- "some secondary advanced level"
alldata$educ1[alldata$educ=="6"] <- "completed secondary advanced level"
alldata$educ1[alldata$educ=="7"] <- "some higher education"
levelCat=c("no education", "some primary", "completed primary", "some secondary ordinary level", "completed secondary orginary level", "some secondary advanced level", "completed secondary advanced level", "some higher education" )
levelCat
alldata$educ1=factor(alldata$educ1,
levels = levelCat,
labels=levelCat,ordered=T)
alldata$educ2[alldata$educ<4] <- 0
alldata$educ2[alldata$educ>=4] <-1
alldata$educ3[alldata$educ2==0] <- "Did not complete secondary"
alldata$educ3[alldata$educ2==1] <- "Completed secondary"
##merging
exp=aggregate(cbind(cons) ~ region, data=alldata, FUN=median)
ed=aggregate(cbind(educ2, gender) ~ region, data=alldata, FUN=mean)
merge2=merge(ed, exp)
##clustering
row.names(merge2)=merge2$region
library(cluster)
cluster=daisy(merge2[,c(2:4)],metric = "euclidean",
stand=TRUE)
cluster1=hclust(cluster,method='complete')
demsil3=silhouette(cutree(cluster1, k = 3), cluster)
clust3solution=data.frame(matrix(demsil3,ncol = 3,dimnames =dimnames(demsil3)))
row.names(clust3solution)=merge2$region
(bad3=clust3solution[clust3solution$sil_width<0,])
cluster3=clust3solution
cluster3$region=row.names(clust3solution)
row.names(cluster3)=NULL
merge3=merge(merge2, cluster3)
#bring in map
compressedMap= "https://github.com/ihsun-uw/PROJECT/raw/master/Shapefile/TZA_adm_shp.zip"
library(utils)
temp=tempfile()
download.file(compressedMap, temp)
unzip(temp)
library(rgdal)
TZmap <- rgdal::readOGR("TZA_adm1.shp",stringsAsFactors=F)
merge3$region.name[merge3$region==1] <-"Dodoma"
merge3$region.name[merge3$region==2] <-"Arusha"
merge3$region.name[merge3$region==3] <-"Kilimanjaro"
merge3$region.name[merge3$region==4] <-"Tanga"
merge3$region.name[merge3$region==5] <-"Morogoro"
merge3$region.name[merge3$region==6] <-"Pwani"
merge3$region.name[merge3$region==7] <-"Dar es Salaam"
merge3$region.name[merge3$region==8] <-"Lindi"
merge3$region.name[merge3$region==9] <-"Mtwara"
merge3$region.name[merge3$region==10] <-"Ruvuma"
merge3$region.name[merge3$region==11] <-"Iringa"
merge3$region.name[merge3$region==12] <-"Mbeya"
merge3$region.name[merge3$region==13] <-"Singida"
merge3$region.name[merge3$region==14] <-"Tabora"
merge3$region.name[merge3$region==15] <-"Rukwa"
merge3$region.name[merge3$region==16] <-"Kigoma"
merge3$region.name[merge3$region==17] <-"Shinyanga"
merge3$region.name[merge3$region==18] <-"Kagera"
merge3$region.name[merge3$region==19] <-"Mwanza"
merge3$region.name[merge3$region==20] <-"Mara"
merge3$region.name[merge3$region==21] <-"Manyara"
merge3$region.name[merge3$region==22] <-"Njombe"
merge3$region.name[merge3$region==23] <-"Katavi"
merge3$region.name[merge3$region==24] <-"Simiyu"
merge3$region.name[merge3$region==25] <-"Geita"
merge3$region.name[merge3$region==51] <-"Zanzibar North"
merge3$region.name[merge3$region==52] <-"Zanzibar South and Central"
merge3$region.name[merge3$region==53] <-"Zanzibar West"
merge3$region.name[merge3$region==54] <-"Pemba North"
merge3$region.name[merge3$region==55] <-"Pemba South"
TZregmap=merge(TZmap, merge3, by.x='NAME_1', by.y='region.name', all.x=F)
library(RColorBrewer)
>>>>>>> d0943e559a91a41d37ed3be28ade69357a8ddb6d
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='Set1'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_2, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate by province"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_2, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate by province"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_2, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate by province"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_2, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate by province"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate in Mozambique by province (2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_2, numberOfClasses,
style = "quantiles",
dataPrecision = 0)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_2, numberOfClasses,
style = "quantile",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate in Mozambique by province (2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_2, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate in Mozambique by province (2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
df_new$u5_change[df_new$province_num==1] <- df_new$U5M_COMB[df_new$province_num==1] - df$U5M_COMB[df$province_num==1 & df$year==2000]
df_new$u5_change[df_new$province_num==1] <- (df_new$U5M_COMB[df_new$province_num==1] - df$U5M_COMB[df$province_num==1 & df$year==2000])/df$U5M_COMB[df$province_num==1 & df$year==2000]
df_new$u5_change[df_new$province_num==1] <- 100*(df_new$U5M_COMB[df_new$province_num==1] - df$U5M_COMB[df$province_num==1 & df$year==2000])/df$U5M_COMB[df$province_num==1 & df$year==2000]
df_new$u5_change[df_new$province_num==2] <- (df_new$U5M_COMB[df_new$province_num==2] - df$U5M_COMB[df$province_num==2 & df$year==2000])/df$U5M_COMB[df$province_num==2 & df$year==2000]
df_new$u5_change[df_new$province_num==3] <- (df_new$U5M_COMB[df_new$province_num==3] - df$U5M_COMB[df$province_num==3 & df$year==2000])/df$U5M_COMB[df$province_num==3 & df$year==2000]
df_new$u5_change[df_new$province_num==4] <- (df_new$U5M_COMB[df_new$province_num==4] - df$U5M_COMB[df$province_num==4 & df$year==2000])/df$U5M_COMB[df$province_num==4 & df$year==2000]
df_new$u5_change[df_new$province_num==5] <- (df_new$U5M_COMB[df_new$province_num==5] - df$U5M_COMB[df$province_num==5 & df$year==2000])/df$U5M_COMB[df$province_num==5 & df$year==2000]
df_new$u5_change[df_new$province_num==6] <- (df_new$U5M_COMB[df_new$province_num==6] - df$U5M_COMB[df$province_num==6 & df$year==2000])/df$U5M_COMB[df$province_num==6 & df$year==2000]
df_new$u5_change[df_new$province_num==7] <- (df_new$U5M_COMB[df_new$province_num==7] - df$U5M_COMB[df$province_num==7 & df$year==2000])/df$U5M_COMB[df$province_num==7 & df$year==2000]
df_new$u5_change[df_new$province_num==8] <- (df_new$U5M_COMB[df_new$province_num==8] - df$U5M_COMB[df$province_num==8 & df$year==2000])/df$U5M_COMB[df$province_num==8 & df$year==2000]
df_new$u5_change[df_new$province_num==9] <- (df_new$U5M_COMB[df_new$province_num==9] - df$U5M_COMB[df$province_num==9 & df$year==2000])/df$U5M_COMB[df$province_num==9 & df$year==2000]
df_new$u5_change[df_new$province_num==10] <- (df_new$U5M_COMB[df_new$province_num==10] - df$U5M_COMB[df$province_num==10 & df$year==2000])/df$U5M_COMB[df$province_num==10 & df$year==2000]
df_new$u5_change[df_new$province_num==11] <- (df_new$U5M_COMB[df_new$province_num==11] - df$U5M_COMB[df$province_num==11 & df$year==2000])/df$U5M_COMB[df$province_num==11 & df$year==2000]
#creating change in u5 mortality rate from 2000 - 2010
df_new$u5_change[df_new$province_num==1] <- 100*(df_new$U5M_COMB[df_new$province_num==1] - df$U5M_COMB[df$province_num==1 & df$year==2000])/df$U5M_COMB[df$province_num==1 & df$year==2000]
df_new$u5_change[df_new$province_num==2] <- 100*(df_new$U5M_COMB[df_new$province_num==2] - df$U5M_COMB[df$province_num==2 & df$year==2000])/df$U5M_COMB[df$province_num==2 & df$year==2000]
df_new$u5_change[df_new$province_num==3] <- 100*(df_new$U5M_COMB[df_new$province_num==3] - df$U5M_COMB[df$province_num==3 & df$year==2000])/df$U5M_COMB[df$province_num==3 & df$year==2000]
df_new$u5_change[df_new$province_num==4] <- 100*(df_new$U5M_COMB[df_new$province_num==4] - df$U5M_COMB[df$province_num==4 & df$year==2000])/df$U5M_COMB[df$province_num==4 & df$year==2000]
df_new$u5_change[df_new$province_num==5] <- 100*(df_new$U5M_COMB[df_new$province_num==5] - df$U5M_COMB[df$province_num==5 & df$year==2000])/df$U5M_COMB[df$province_num==5 & df$year==2000]
df_new$u5_change[df_new$province_num==6] <- 100*(df_new$U5M_COMB[df_new$province_num==6] - df$U5M_COMB[df$province_num==6 & df$year==2000])/df$U5M_COMB[df$province_num==6 & df$year==2000]
df_new$u5_change[df_new$province_num==7] <- 100*(df_new$U5M_COMB[df_new$province_num==7] - df$U5M_COMB[df$province_num==7 & df$year==2000])/df$U5M_COMB[df$province_num==7 & df$year==2000]
df_new$u5_change[df_new$province_num==8] <- 100*(df_new$U5M_COMB[df_new$province_num==8] - df$U5M_COMB[df$province_num==8 & df$year==2000])/df$U5M_COMB[df$province_num==8 & df$year==2000]
df_new$u5_change[df_new$province_num==9] <- 100*(df_new$U5M_COMB[df_new$province_num==9] - df$U5M_COMB[df$province_num==9 & df$year==2000])/df$U5M_COMB[df$province_num==9 & df$year==2000]
df_new$u5_change[df_new$province_num==10] <- 100*(df_new$U5M_COMB[df_new$province_num==10] - df$U5M_COMB[df$province_num==10 & df$year==2000])/df$U5M_COMB[df$province_num==10 & df$year==2000]
df_new$u5_change[df_new$province_num==11] <- 100*(df_new$U5M_COMB[df_new$province_num==11] - df$U5M_COMB[df$province_num==11 & df$year==2000])/df$U5M_COMB[df$province_num==11 & df$year==2000]
layerContrib_2=merge(mozzipMap,df_new, by.x='province_num', by.y='province_num',all.x=F)
varToPlot_2=layerContrib_2$U5M_COMB
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_2, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate in Mozambique by province (2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
varToPlot_3=layerContrib_2$u5_change
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_3, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate in Mozambique by province (2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_2, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate in Mozambique by province (2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_3, col = colorPallette,border=NA,add=T) #add
layerContrib_3=merge(mozzipMap,df_new, by.x='province_num', by.y='province_num',all.x=F)
varToPlot_3=layerContrib_2$u5_change
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='OrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_3, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Under 5 mortality rate in Mozambique by province (2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_3, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='Spectral'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_3, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Percent change in u5 mortality rate in Mozambique by province (2000-2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_3, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='RdGy'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_3, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Percent change in u5 mortality rate in Mozambique by province (2000-2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_3, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='GyRd'
colors = brewer.pal(numberOfClasses, colorForScale)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='Blues'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_3, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Percent change in u5 mortality rate in Mozambique by province (2000-2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_3, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
legendText="intervals"
shrinkLegend=1
title="Percent change in u5 mortality rate in Mozambique by province /n(2000-2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_3, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
legendText="intervals"
shrinkLegend=1
title="Percent change in u5 mortality rate in Mozambique by province \n(2000-2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_3, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='colorRamps::blue2red'
colors = brewer.pal(numberOfClasses, colorForScale)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='YlOrRd'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot_3, numberOfClasses,
style = "kmeans",
dataPrecision = 0)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Percent change in u5 mortality rate in Mozambique by province \n(2000-2010)"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib_3, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(classInt)
#layerContrib
numberOfClasses=5
colorForScale='Greys'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot, numberOfClasses,
style = "quantile",
dataPrecision = 1)
colorPallette <- findColours(intervals, colors)
library(RColorBrewer)
colors <- brewer.pal(9, "BuGn")
varToPlot=layerContrib$ape_contrib
library(classInt)
numberOfClasses=5
colorForScale='Greys'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot, numberOfClasses,
style = "quantile",
dataPrecision = 1)
colorPallette <- findColours(intervals, colors)
library(classInt)
numberOfClasses=5
colorForScale='BuGn'
colors = brewer.pal(numberOfClasses, colorForScale)
intervals <- classIntervals(varToPlot, numberOfClasses,
style = "quantile",
dataPrecision = 1)
colorPallette <- findColours(intervals, colors)
legendText="intervals"
shrinkLegend=1
title="Average Contribution of CHWs in Mozambique"
# first the ORIGINAL to signal missing values:
plot(mozzipMap,col='red',main=title, border="black", lwd=1)
# now the info on contributions
plot(layerContrib, col = colorPallette,border=NA,add=T) #add
# this uses all previous information
legend('topright',
legend = names(attr(colorPallette, "table")), #values
fill = attr(colorPallette, "palette"), #colors
cex = shrinkLegend, #size
bty = "n", # no box
title=legendText)
library(ggplot2)
library(ggrepel)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=TRUE, message=TRUE)
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
# notice the parameters use in the chunk!!
library(rgdal)
mozzipMap <- readOGR("MOZ-level_1.shp",stringsAsFactors=F)
# notice the parameters use in the chunk!!
library(rgdal)
mozzipMap <- readOGR("MOZ-level_1.shp",stringsAsFactors=F)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
library(utils)
temp=tempfile()
download.file(zip_mozmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
# notice the parameters use in the chunk!!
library(rgdal)
mozzipMap <- readOGR("MOZ-level_1.shp",stringsAsFactors=F)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
#link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
#chw_fp <- read_dta(url(link))
link="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/child_mortality.dta"
df <- read_dta(url(link))
zip_mozmap_SHP = "https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps.zip"
library(utils)
temp=tempfile()
download.file(zip_mozmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
#link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
#chw_fp <- read_dta(url(link))
link="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/child_mortality.dta"
df <- read_dta(url(link))
<<<<<<< HEAD
zip_mozmap_SHP = "https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps.zip"
# notice the parameters use in the chunk!!
library(rgdal)
mozzipMap <- readOGR("MOZ-level_1.shp",stringsAsFactors=F)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
=======
scat1 <- ggplot(df, aes()) +
geom_point(aes(x=year, y=U5M_COMB, color="Under Five Mortality"), size = 0.8, alpha=1/3) +
geom_smooth(aes(x=year, y=U5M_COMB), method="loess", se=T, size=0.6, color="purple") +
geom_point(aes(x=year, y=NEONAT_COMB, color= "Neonatal Mortality"), size = 0.8, alpha=1/4) +
geom_smooth(aes(x=year, y=NEONAT_COMB), method="loess", se=T, size=0.6, color="green") +
geom_point(aes(x=year, y=INFANT_COMB, color= "Infant Mortality"), size = 0.8, alpha=1/5) +
geom_smooth(aes(x=year, y=INFANT_COMB), method="loess", se=T, size=0.6, color="red") +
labs(title = "Mozambique trends on Under five, Infant and Neonatal Mortality",
y =" U5 Mortality rate (per 1000 live births)",
x = "Years",
caption = "Fig.1: National-level time-series for child mortality in Mozambique 2000鈥?10 (including 95% CI)
Source:Demographic Heath Survey") +
theme(legend.position = "bottom",
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(2000,2002,2004,2006,2008,2010))  + theme(legend.title=element_blank())
scat1
install.packages("ggrepel", repos = "http://cran.us.r-project.org")
library(ggplot2)
library(ggrepel)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=TRUE)
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages("ggrepel", repos = "http://cran.us.r-project.org")
library(ggplot2)
library(ggrepel)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=TRUE)
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages("ggrepel", repos = "http://cran.us.r-project.org")
install.packages("ggrepel", repos = "http://cran.us.r-project.org")
library(ggplot2)
library(ggrepel)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=TRUE)
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
library(utilsIPEA)
library(rgdal)
library(raster)
library(tmaptools)
>>>>>>> d0943e559a91a41d37ed3be28ade69357a8ddb6d
install.packages("utilsIPEA", repos = "http://cran.us.r-project.org")
install.packages("rgdal", repos = "http://cran.us.r-project.org")
install.packages("raster", repos = "http://cran.us.r-project.org")
install.packages("tmaptools", repos = "http://cran.us.r-project.org")
<<<<<<< HEAD
install.packages("mapshaper", repos = "http://cran.us.r-project.org")
install.packages("tmap", repos = "http://cran.us.r-project.org")
install.packages("leaflet", repos = "http://cran.us.r-project.org")
install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
install.packages("classint", repos = "http://cran.us.r-project.org")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
=======
#install.packages("mapshaper", repos = "http://cran.us.r-project.org")
install.packages("tmap", repos = "http://cran.us.r-project.org")
install.packages("leaflet", repos = "http://cran.us.r-project.org")
install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
install.packages("classInt", repos = "http://cran.us.r-project.org")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
library(utilsIPEA)
library(rgdal)
library(raster)
library(tmaptools)
install.packages("utilsIPEA", repos = "http://cran.us.r-project.org")
install.packages("ggrepel", repos = "http://cran.us.r-project.org")
library(ggplot2)
library(ggrepel)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=TRUE)
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages("haven", repos = "http://cran.us.r-project.org")
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
install.packages("foreign", repos = "http://cran.us.r-project.org")
library ("haven")
library("ggplot2")
library("foreign")
install.packages("haven", repos = "http://cran.us.r-project.org")
install.packages("ggrepel", repos = "http://cran.us.r-project.org")
library(ggplot2)
library(ggrepel)
library(foreign)
library(haven)
install.packages("haven", repos = "http://cran.us.r-project.org")
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
install.packages("foreign", repos = "http://cran.us.r-project.org")
library ("haven")
library("ggplot2")
library("foreign")
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
install.packages("ggrepel", repos = "http://cran.us.r-project.org")
library(ggplot2)
library(ggrepel)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=TRUE)
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
#link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
#chw_fp <- read_dta(url(link))
link="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/child_mortality.dta"
df <- read_dta(url(link))
zip_mozmap_SHP = "https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps.zip"
library(utils)
temp=tempfile()
download.file(zip_mozmap_SHP, temp)
unzip(temp)
#DMC - showing which tempfiles are in the directory
(maps=list.files(pattern = 'shp'))
.libPaths()
>>>>>>> d0943e559a91a41d37ed3be28ade69357a8ddb6d
