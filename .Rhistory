main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
cex.names=0.6,
cex.lab=0.6,
las=2,
horiz = T,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlot,y=location,labels=plotLabels,pos = 4,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
#reference line
abline(v=25,lty=3,lwd=3)
# customizing tick values
newXvalues<-c(0,10,25,40,50) # you just want to show this on the axis
axis(side=1,
at=newXvalues,
labels = newXvalues,
cex.axis=0.8)
library(ggplot2)
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.2) #transparency
plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.1) #transparency
plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.0) #transparency
plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.2) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
###
ToPlotOrd=sort(ToPlot)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
tableFreq[order(-tableFreq$pct),]
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
tableFreq[order(-tableFreq$pct),]
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order(decreasing=TRUE))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order(plot6, decreasing=TRUE))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order, decreasing=TRUE)
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order(-tableFreq$pct))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order(-tableFreq$pct)
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order(-tableFreq$pct, decreasing=TRUE))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order(-tableFreq$pct, decreasing=TRUE)
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order(tableFreq$pct, decreasing=TRUE)
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3
order(tableFreq$pct, decreasing=TRUE))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3,
order(tableFreq$pct, decreasing=TRUE))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3,
order( decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3,
order(decreasing=FALSE))
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3,
order(increasing=TRUE))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3,
order(decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3,
order(tableFreq$pct, decreasing=TRUE))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3,
#order(tableFreq$pct, decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
hjust=1, # if flipping 'hjust'
size = 3,
order(tableFreq$pct, decreasing=TRUE))
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
hjust=1, # if flipping 'hjust'
size = 3,
#order(tableFreq$pct, decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
hjust=1, # if flipping 'hjust'
size = 3)
#order(tableFreq$pct, decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
hjust=1, # if flipping 'hjust'
size = 3)
#order(tableFreq$pct, decreasing=TRUE))
# wanna flip the plot?
plot6 + coord_flip()
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages(haven)
library "haven"
library ("haven")
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
View(chw_fp)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages(haven)
install.packages(ggplot2)
library ("haven")
library("ggplot2")
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
# Chunk 1
library(readxl)
temp = tempfile(fileext = ".xlsx")
dataURL <- "https://github.com/ihsun-uw/Assignment-1/raw/master/consumptionnps4.xlsx" # link to data
download.file(dataURL, destfile=temp, mode='wb')  # file will be downloaded temporarily
cons = read_excel(temp, sheet =1)
cons=as.data.frame(cons)
temp = tempfile(fileext = ".xlsx")
dataURL <- "https://github.com/ihsun-uw/Assignment-1/raw/master/Education.xlsx" # link to data
download.file(dataURL, destfile=temp, mode='wb')  # file will be downloaded temporarily
educ = read_excel(temp, sheet =1)
educ=as.data.frame(educ)
temp = tempfile(fileext = ".xlsx")
dataURL <- "https://github.com/ihsun-uw/Assignment-1/raw/master/individual.xlsx" # link to data
download.file(dataURL, destfile=temp, mode='wb')  # file will be downloaded temporarily
indiv = read_excel(temp, sheet =1)
indiv=as.data.frame(indiv)
##subsetting
cons=cons[,c("y4_hhid", "expmR", "adulteq", "region")]
educ=educ[,c("y4_hhid", "indidy4", "hh_c02", "hh_c03", "hh_c07")]
indiv=indiv[,c("y4_hhid", "indidy4", "hh_b02")]
educ=educ[educ$indidy4==1,]
indiv=indiv[indiv$indidy4==1,]
merge1=merge(cons, educ)
alldata=merge(merge1, indiv)
alldata$cons=alldata$expmR/alldata$adulteq/365
alldata$gender.name[alldata$hh_b02==1] <- "male"
alldata$gender.name[alldata$hh_b02==2] <- "female"
alldata$gender[alldata$hh_b02==1] <- 0
alldata$gender[alldata$hh_b02==2] <- 1
alldata$gender=as.numeric(alldata$gender)
alldata$educ[alldata$hh_c03==2] <- 0
alldata$educ[alldata$hh_c07<17] <- 1
alldata$educ[alldata$hh_c07==17] <-2  #typical primary education is 7 years
alldata$educ[alldata$hh_c07==18] <-2
alldata$educ[alldata$hh_c07>=21 & alldata$hh_c07<25] <- 3
alldata$educ[alldata$hh_c07==24] <-4
alldata$educ[alldata$hh_c07>=31 & alldata$hh_c07<34] <- 5
alldata$educ[alldata$hh_c07==32] <-6
alldata$educ[alldata$hh_c07==34] <-6
alldata$educ[alldata$hh_c07>34] <- 7
alldata$educ1[alldata$educ=="0"] <- "no education"
alldata$educ1[alldata$educ=="1"] <- "some primary"
alldata$educ1[alldata$educ=="2"] <- "completed primary"
alldata$educ1[alldata$educ=="3"] <- "some secondary ordinary level"
alldata$educ1[alldata$educ=="4"] <- "completed secondary ordinary level"
alldata$educ1[alldata$educ=="5"] <- "some secondary advanced level"
alldata$educ1[alldata$educ=="6"] <- "completed secondary advanced level"
alldata$educ1[alldata$educ=="7"] <- "some higher education"
levelCat=c("no education", "some primary", "completed primary", "some secondary ordinary level", "completed secondary orginary level", "some secondary advanced level", "completed secondary advanced level", "some higher education" )
levelCat
alldata$educ1=factor(alldata$educ1,
levels = levelCat,
labels=levelCat,ordered=T)
alldata$educ2[alldata$educ<4] <- 0
alldata$educ2[alldata$educ>=4] <-1
alldata$educ3[alldata$educ2==0] <- "Did not complete secondary"
alldata$educ3[alldata$educ2==1] <- "Completed secondary"
##merging
exp=aggregate(cbind(cons) ~ region, data=alldata, FUN=median)
ed=aggregate(cbind(educ2, gender) ~ region, data=alldata, FUN=mean)
merge2=merge(ed, exp)
##clustering
row.names(merge2)=merge2$region
library(cluster)
cluster=daisy(merge2[,c(2:4)],metric = "euclidean",
stand=TRUE)
cluster1=hclust(cluster,method='complete')
demsil3=silhouette(cutree(cluster1, k = 3), cluster)
clust3solution=data.frame(matrix(demsil3,ncol = 3,dimnames =dimnames(demsil3)))
row.names(clust3solution)=merge2$region
(bad3=clust3solution[clust3solution$sil_width<0,])
cluster3=clust3solution
cluster3$region=row.names(clust3solution)
row.names(cluster3)=NULL
merge3=merge(merge2, cluster3)
#bring in map
compressedMap= "https://github.com/ihsun-uw/PROJECT/raw/master/Shapefile/TZA_adm_shp.zip"
library(utils)
temp=tempfile()
download.file(compressedMap, temp)
unzip(temp)
library(rgdal)
TZmap <- rgdal::readOGR("TZA_adm1.shp",stringsAsFactors=F)
merge3$region.name[merge3$region==1] <-"Dodoma"
merge3$region.name[merge3$region==2] <-"Arusha"
merge3$region.name[merge3$region==3] <-"Kilimanjaro"
merge3$region.name[merge3$region==4] <-"Tanga"
merge3$region.name[merge3$region==5] <-"Morogoro"
merge3$region.name[merge3$region==6] <-"Pwani"
merge3$region.name[merge3$region==7] <-"Dar es Salaam"
merge3$region.name[merge3$region==8] <-"Lindi"
merge3$region.name[merge3$region==9] <-"Mtwara"
merge3$region.name[merge3$region==10] <-"Ruvuma"
merge3$region.name[merge3$region==11] <-"Iringa"
merge3$region.name[merge3$region==12] <-"Mbeya"
merge3$region.name[merge3$region==13] <-"Singida"
merge3$region.name[merge3$region==14] <-"Tabora"
merge3$region.name[merge3$region==15] <-"Rukwa"
merge3$region.name[merge3$region==16] <-"Kigoma"
merge3$region.name[merge3$region==17] <-"Shinyanga"
merge3$region.name[merge3$region==18] <-"Kagera"
merge3$region.name[merge3$region==19] <-"Mwanza"
merge3$region.name[merge3$region==20] <-"Mara"
merge3$region.name[merge3$region==21] <-"Manyara"
merge3$region.name[merge3$region==22] <-"Njombe"
merge3$region.name[merge3$region==23] <-"Katavi"
merge3$region.name[merge3$region==24] <-"Simiyu"
merge3$region.name[merge3$region==25] <-"Geita"
merge3$region.name[merge3$region==51] <-"Zanzibar North"
merge3$region.name[merge3$region==52] <-"Zanzibar South and Central"
merge3$region.name[merge3$region==53] <-"Zanzibar West"
merge3$region.name[merge3$region==54] <-"Pemba North"
merge3$region.name[merge3$region==55] <-"Pemba South"
TZregmap=merge(TZmap, merge3, by.x='NAME_1', by.y='region.name', all.x=F)
library(RColorBrewer)
library(classInt)
# Chunk 2: location
# notice "fig=TRUE"
varToPlot4=TZregmap$cluster
numberOfClasses = length(levels(varToPlot4))
colorForScale='Set2'
colors = brewer.pal(numberOfClasses, colorForScale)
title="Development"
plot(TZmap,col='black',main=title)
plot(TZregmap, col = colors[varToPlot4],border='grey',add=T)
install.packages(haven)
install.packages(ggplot2)
install.packages(maptools)
library ("haven")
library("ggplot2")
library("maptools")
install.packages(maptools)
install.packages("maptools")
install.packages("haven")
install.packages("ggplot2")
install.packages("maptools")
library ("haven")
library("ggplot2")
library("maptools")
install.packages("haven")
knitr::opts_chunk$set(echo = TRUE)
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages("foreign")
library("foreign")
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages("haven")
library ("haven")
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
maplink="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/MOZ-level_1.shp"
moz_map <- readShapePoly(maplink)
moz_map <- readShapePoly("maplink")
moz_map = readShapePoly(maplink)
moz_map -> readShapePoly("maplink")
moz_map = readShapePoly("maplink")
moz_map = readShapeSPatial("maplink")
moz_map = readShapeSpatial("maplink")
install.packages("maptools")
library("maptools")
maplink="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/MOZ-level_1.shp"
moz_map -> readShapePoly(maplink)
moz_map = readShapePoly(maplink)
moz_map = readShapeSpatial("/Users/david/Documents/GitHub/Group3_Final_Project/Mozambique shape maps")
install.packages("sf")
library("sf")
maplink="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/MOZ-level_1.shp"
moz_map = st_read(maplink)
moz_map = st_read("/Users/david/Documents/GitHub/Group3_Final_Project/Mozambique shape maps")
maplink="https://github.com/ihsun-uw/Group3_Final_Project/tree/master/Mozambique%20shape%20maps"
moz_map = st_read("maplink")
maplink="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps"
moz_map = st_read("maplink")
maplink="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps/MOZ-level_1.dbf, https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps/MOZ-level_1.shp"
moz_map = st_read("maplink")
maplink="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps/MOZ-level_1.dbf, https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps/MOZ-level_1.shp, https://github.com/ihsun-uw/Group3_Final_Project/raw/master/Mozambique%20shape%20maps/MOZ-level_1.shx"
moz_map = st_read("maplink")
View(moz_map)
library(RColorBrewer)
colors <- brewer.pal(9, "BuGn")
library(ggmap)
install.packages("ggmap")
install.packages("ggmap")
install.packages("ggmap")
install.packages("ggmap")
install.packages("ggmap")
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
library(ggmap)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("haven")
install.packages("ggplot2")
install.packages("foreign")
library ("haven")
library("ggplot2")
library("foreign")
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
mapImage <- get_map(location = c(lon = -118, lat = 37.5),
color = "color",
source = "osm",
# maptype = "terrain",
zoom = 6)
library(ggmap)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("haven")
install.packages("ggplot2")
install.packages("foreign")
library ("haven")
library("ggplot2")
ggplot2:
library(ggmap)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("haven")
#install.packages("ggplot2")
install.packages("foreign")
library ("haven")
#library("ggplot2")
library("foreign")
link="https://github.com/quinhasf/pubpol-599/raw/master/ape_analysis.dta"
chw_fp <- read_dta(url(link))
install.packages("maptools")
library("maptools")
install.packages("sf")
library("sf")
maplink="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/MOZ-level_1.shp"
moz_map = st_read("/Users/david/Documents/GitHub/Group3_Final_Project/Mozambique shape maps")
library(RColorBrewer)
colors <- brewer.pal(9, "BuGn")
install.packages("ggmap")
library(ggplot2)
library(ggmap)
mapImage <- get_map(location = c(lon = -118, lat = 37.5),
color = "color",
source = "osm",
# maptype = "terrain",
zoom = 6)
?register_google
